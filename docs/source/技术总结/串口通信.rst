串口通信
======================================

**串口通信（Serial Communication）** 是一种数据传输方式，通常用于设备之间的低速数据交换，如微控制器、传感器、调试接口等。它通过 **串行端口（Serial Port）** 逐位传输数据，相比并行通信更简单、成本更低。

串口通信的特点
----------------
1. **逐位传输**：数据按位顺序发送，适用于长距离通信。
2. **全双工或半双工**：支持同时收发（全双工）或轮流收发（半双工）。
3. **低成本**：硬件简单，适用于嵌入式系统和工业控制。
4. **异步或同步**：可采用异步（UART）或同步（SPI、I2C）通信方式。

常见的串口通信协议
--------------------
UART（通用异步收发传输）
^^^^^^^^^^^^^^^^^^^^^^^^
- **异步通信**，无需时钟信号。
- 采用 **起始位、数据位、校验位、停止位** 格式。
- 典型波特率：9600、115200等。

SPI（串行外设接口）
^^^^^^^^^^^^^^^^^^^
- **同步通信**，需要时钟信号（SCLK）。
- 主设备（Master）与多个从设备（Slave）通信。
- 采用 **MOSI、MISO、SCLK、CS** 四条线。

I2C（集成电路间通信）
^^^^^^^^^^^^^^^^^^^^^^
- **同步通信**，仅需两条线（SDA、SCL）。
- 采用 **地址寻址**，支持多个设备共享总线。
- 适用于传感器、EEPROM等低速设备。

串口通信过程
----------------
数据帧格式（以UART为例）
^^^^^^^^^^^^^^^^^^^^^^^^
::

    | 起始位 | 数据位（8位） | 校验位 | 停止位 |

- **起始位（Start Bit）**：标识数据开始（通常为低电平）。
- **数据位（Data Bits）**：实际传输的数据（通常为8位）。
- **校验位（Parity Bit）**：可选，用于错误检测（偶校验或奇校验）。
- **停止位（Stop Bit）**：标识数据结束（通常为高电平）。

发送与接收
^^^^^^^^^^
- **发送端**：按数据帧格式发送数据。
- **接收端**：解析数据帧，校验并存储数据。

串口通信 vs 并口通信
----------------------
.. list-table::
   :header-rows: 1

   * - 特性
     - 串口通信
     - 并口通信
   * - 传输方式
     - 逐位传输
     - 并行传输
   * - 速度
     - 较慢
     - 较快
   * - 线缆数量
     - 少（2~4根）
     - 多（8~32根）
   * - 适用场景
     - 远距离、低速设备
     - 短距离、高速设备

应用场景
----------------
- **微控制器与传感器通信**
- **调试串口（如 Arduino、ESP8266）**
- **工业自动化（PLC、RS-485）**
- **GPS模块、蓝牙模块**
