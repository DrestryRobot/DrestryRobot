TCP通信
=========

**TCP（传输控制协议）** 是一种面向连接、可靠的传输协议，广泛用于互联网通信。它确保数据在发送端和接收端之间正确、有序地传输，并提供错误检测和流量控制机制。

TCP通信的特点
----------------
1. **面向连接**：在通信前，必须建立连接（即“三次握手”）。
2. **可靠传输**：确保数据包按顺序到达，并且无丢失、无重复。
3. **流量控制**：根据接收端的处理能力调整发送速率，避免数据溢出。
4. **拥塞控制**：在网络拥塞时，动态调整数据发送速率，减少丢包。
5. **全双工通信**：支持同时发送和接收数据。

TCP通信过程
----------------
连接建立（TCP三次握手）
^^^^^^^^^^^^^^^^^^^^^^^^
三次握手用于确保双方都能正常收发数据：

1. **客户端发送 SYN（同步）**：请求建立连接。
2. **服务器回复 SYN-ACK**：确认收到请求，并准备建立连接。
3. **客户端发送 ACK**：确认连接建立，通信开始。

数据传输
^^^^^^^^
- 发送端将数据拆分成多个数据包，并编号。
- 接收端按序接收数据，并发送 ACK 确认。
- 若数据丢失或错误，发送端会重传数据。

连接释放（TCP四次挥手）
^^^^^^^^^^^^^^^^^^^^^^^^
为了确保数据传输完成，TCP采用四次挥手来关闭连接：

1. **客户端发送 FIN**：请求断开连接。
2. **服务器回复 ACK**：确认收到断开请求。
3. **服务器发送 FIN**：通知客户端可以关闭连接。
4. **客户端回复 ACK**：最终确认，连接关闭。

TCP vs UDP
----------------
.. list-table::
   :header-rows: 1

   * - 特性
     - TCP
     - UDP
   * - 连接方式
     - 面向连接
     - 无连接
   * - 可靠性
     - 高（有确认机制）
     - 低（不保证数据到达）
   * - 速度
     - 较慢（需确认和重传）
     - 快（无确认机制）
   * - 适用场景
     - 文件传输、HTTP、邮件
     - 视频流、DNS查询、实时通信

应用场景
----------------
- **Web浏览（HTTP/HTTPS）**
- **文件传输（FTP）**
- **电子邮件（SMTP、IMAP、POP3）**
- **远程登录（SSH、Telnet）**

